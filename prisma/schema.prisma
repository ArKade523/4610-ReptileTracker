// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  email         String     @unique
  password_hash String
  Profile       Profile    @relation(fields: [profile_id], references: [id])
  profile_id    Int        @unique
  Reptile       Reptile[]
  Schedule      Schedule[]
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
}

model Profile {
  id         Int      @id @default(autoincrement())
  user       User?
  first_name String
  last_name  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Reptile {
  id              Int               @id @default(autoincrement())
  name            String
  species         String
  sex             String
  User            User              @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id         Int
  Feeding         Feeding[] 
  HusbandryRecord HusbandryRecord[]
  Schedule        Schedule[]
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
}

model Feeding {
  id         Int      @id @default(autoincrement())
  foodItem   String
  Reptile    Reptile  @relation(fields: [reptile_id], references: [id], onDelete: Cascade)
  reptile_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model HusbandryRecord {
  id          Int      @id @default(autoincrement())
  Reptile     Reptile  @relation(fields: [reptile_id], references: [id], onDelete: Cascade)
  reptile_id  Int
  length      Float
  weight      Float
  temperature Float
  humidity    Float
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Schedule {
  id          Int      @id @default(autoincrement())
  Reptile     Reptile  @relation(fields: [reptile_id], references: [id], onDelete: Cascade)
  reptile_id  Int
  User        User     @relation(fields: [user_id], references: [id])
  user_id     Int
  type        String
  description String
  monday      Boolean
  tuesday     Boolean
  wednesday   Boolean
  thursday    Boolean
  friday      Boolean
  saturday    Boolean
  sunday      Boolean
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}
